# participant.py

import requests
import redis
import sys
import time
import json
import uuid

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
TOKEN = '${BOT_TOKEN}'
CHAT_ID = '-1002998392121'
TOPIC_ID = 101
REDIS_HOST = '${IP}'
REDIS_PORT = 6379
CHANNEL = 'relay_channel'
# --- –ö–û–ù–ï–¶ –ù–ê–°–¢–†–û–ï–ö ---

def send_telegram_message(text_to_send):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ç–æ–ø–∏–∫ Telegram."""
    api_url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {
        'chat_id': CHAT_ID,
        'text': text_to_send,
        'message_thread_id': TOPIC_ID
    }
    try:
        response = requests.post(api_url, json=payload, timeout=10)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {response.status_code} - {response.text}")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –£—á–∞—Å—Ç–Ω–∏–∫–∞."""
    my_id = f"bot-{uuid.uuid4().hex[:6]}"
    print(f"[{my_id}] üü¢ –£—á–∞—Å—Ç–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω. –ú–æ–π ID: {my_id}")

    try:
        r = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, decode_responses=True)
        ps = r.pubsub(ignore_subscribe_messages=True)
        ps.subscribe(CHANNEL)
        print(f"[{my_id}] ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ Redis.")
    except Exception as e:
        print(f"[{my_id}] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis: {e}")
        sys.exit(1)

    for message in ps.listen():
        try:
            data = json.loads(message['data'])
            command_type = data.get('type')

            # 1. –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–ª–∏—á –†–µ—Ñ–µ—Ä–∏
            if command_type == 'roll_call':
                # SADD –∞—Ç–æ–º–∞—Ä–Ω–æ –¥–æ–±–∞–≤–∏—Ç –Ω–∞—à ID –≤ –Ω–∞–±–æ—Ä. –ë–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –≥–æ–Ω–æ–∫.
                r.sadd('processed_bots', my_id)
                print(f"[{my_id}] üì¢ –û—Ç–≤–µ—Ç–∏–ª –Ω–∞ –∫–ª–∏—á 'roll_call'.")
            
            # 2. –ù–∞—á–∏–Ω–∞–µ–º —ç—Å—Ç–∞—Ñ–µ—Ç—É
            elif command_type == 'start_race':
                order = data.get('order', [])
                if my_id in order:
                    my_turn = order.index(my_id)
                    print(f"[{my_id}] üöÄ –≠—Å—Ç–∞—Ñ–µ—Ç–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ú–æ–π –Ω–æ–º–µ—Ä: {my_turn + 1}")
                    
                    # –ñ–¥–µ–º —Å–≤–æ–µ–π –æ—á–µ—Ä–µ–¥–∏
                    for i, bot_id in enumerate(order):
                        if i < my_turn:
                            continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Ö, –∫—Ç–æ –±—ã–ª –¥–æ –Ω–∞—Å
                        
                        # –ù–∞—à–∞ –æ—á–µ—Ä–µ–¥—å
                        if bot_id == my_id:
                            print(f"[{my_id}] üèÉ‚Äç‚ôÇÔ∏è –ú–æ–π —Ö–æ–¥!")
                            send_telegram_message(f"–ü—Ä–∏–Ω–∏–º–∞—é —ç—Å—Ç–∞—Ñ–µ—Ç—É, —è –Ω–æ–º–µ—Ä {my_turn + 1} ({my_id})")
                            break # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, —Ç–∞–∫ –∫–∞–∫ —Å–≤–æ–π —Ö–æ–¥ —Å–¥–µ–ª–∞–ª–∏
                        
                        # –ñ–¥–µ–º, –ø–æ–∫–∞ —Å—Ö–æ–¥–∏—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π
                        time.sleep(3) 

        except (json.JSONDecodeError, TypeError):
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            continue

if __name__ == "__main__":
    main()
